<%
/*
 *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
    var log = new Log();
    //initialize BPS HT service request creator
    var htRequest = require ('/js/WSHTRequest.js');
    htRequest.initHTServerInfo(BPSUrl, session.get('BPSSessionCookie'));
    var id = request.getParameter("id");

    try {
        var taskAbstract = null;
        var authorisedActions = null;

        var notificationRecepientXML = null;
        var recepient = '';
        var recepientTitle = null;

        //Retrieve task Details
        var result = new XML(htRequest.loadTask(id));
        if (log.isDebugEnabled()) {
            log.debug('loadTask BPS RESPONSE : ' + result);
        }
        taskAbstract = result.SOAPENV_NS::Body.NS2_NS::loadTaskResponse.NS2_NS::taskAbstract;

        notificationRecepientXML = result.SOAPENV_NS::Body.NS2_NS::loadTaskResponse.NS2_NS::taskAbstract.NS1_NS::notificationRecipients.NS1_NS::user.text();
        if (notificationRecepientXML.length() == 0) {
           recepient = taskAbstract.NS1_NS::notificationRecipients.NS1_NS::group.text();
           recepientTitle = "Recepient Group";
        } else {
           recepient += notificationRecepientXML[0];
           for (var i = 1; i < notificationRecepientXML.length(); i++) {
                recepient += ", "  + notificationRecepientXML[i];
           }
            recepientTitle = "Owners";
         }

        //retrieve authorized actions for currrent user
        var authParamResult = new XML(htRequest.loadAuthorisationParams(id));
        if (log.isDebugEnabled()) {
            log.debug('load auth paramas respnse :\n'+ authParamResult);
        }
        authorisedActions = authParamResult.SOAPENV_NS::Body.NS2_NS::loadAuthorisationParamsResponse.NS2_NS::taskAuthorisationParamsResult;

    } catch (e) {
        log.error('Error occurred while connecting to the back-end BPS HumanTaskClientAPIAdmin service : ');
        log.error(e);
        session.put('authSuccess', false);
        response.sendRedirect('login');
    }
    try {
        //retrieve HT renderings
        var HTRenderingsMsg = htRequest.getHTRenderings(id);
        if(HTRenderingsMsg == null || HTRenderingsMsg =="" ) {
            if (log.isDebugEnabled()) {
                log.debug('Session timed out for task'+ "" + id);
            }
            session.put('authSuccess', false);
            response.sendRedirect('login');
        }
        var HTRenderingsXML = new XML(HTRenderingsMsg);
        var wso2InputRenderList = HTRenderingsXML..rendering_NS::getRenderingsResponse.input.element;

    } catch (e) {
        log.error('Error occurred while connecting to the back-end BPS HTRenderingAPI service : ');
        log.error(e);
        session.put('authSuccess', false);
        response.sendRedirect('login');
    }
%>
