<%
/*
 * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 * 
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

    var log = new Log(),
    data = require('../config/config.json');
    var i18n = require("i18n");
    var localeResourcesBasePath="../config/locales/";
    i18n.init(request,localeResourcesBasePath);
    // owasp encoder to prevent XSS attacks
    var Encode = Packages.org.owasp.encoder.Encode;

    //construct backend URI using config.json
    var BPSUrl = application.get('bpsURI');
    if (BPSUrl == null || BPSUrl === "") {
        var bpsHost = data.server.bpsHost;
        var bpsPort = data.server.bpsPort;

        var bpsTenant = data.server.bpsTenant;
        var tenantUrlPart = '';
        //check for tenant domain
        if (bpsTenant != undefined && bpsTenant.length > 0) {
            tenantUrlPart = "/t/" + bpsTenant;
        }

        var hostServer = null;
        if(bpsHost == null || bpsHost === "" || bpsPort == null || bpsPort === "") {
            log.info('Starting Humantask-explorer in default configuration');
            var process = require("process");
            var localIP = process.getProperty('carbon.local.ip');
            var httpsPort = process.getProperty('mgt.transport.https.port');
            BPSUrl = "https://" +localIP +":" + httpsPort + tenantUrlPart;
            hostServer = "https://" +localIP +":" + httpsPort;
        } else {
            BPSUrl = "https://" + data.server.bpsHost + ":" + data.server.bpsPort + tenantUrlPart;
            hostServer = "https://" + data.server.bpsHost + ":" + data.server.bpsPort;
        }

        
        var serverAddress = '';
        //If the BPS fronted by proxy (or load balance eg: nginx) server Address should match hostname and port
        var deployedServerInfo = getDeployedServerInfo (); 
        
        if (log.isDebugEnabled()) {
            log.debug("Deployed server info :" + stringify(deployedServerInfo));
        }

        if (deployedServerInfo.HostName == null || deployedServerInfo.ProxyPort < 0) { //server not fronted by proxy

            //retrieve explorer deployed server
            var carbon = require('carbon');
            serverAddress = carbon.server.address('https');

        } else {

            serverAddress = "https://" + deployedServerInfo.HostName + ":" + deployedServerInfo.ProxyPort;

        }

        application.put('bpsURI', BPSUrl);
        application.put('hostServer', hostServer);
        application.put('bpsTenant', bpsTenant);
        application.put('serverAddress', serverAddress);
        application.put('tenantUrlPart', tenantUrlPart);

        if (log.isDebugEnabled()) {
            log.debug("Back-end BPS URI :" + BPSUrl);
        }
    }

    //ws-humantask namespaces
    var SOAPENV_NS = new Namespace('http://schemas.xmlsoap.org/soap/envelope/');
    var NS2_NS = new Namespace('http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803');
    var NS1_NS = new Namespace('http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803');
    var htd = new Namespace('http://docs.oasis-open.org/ns/bpel4people/ws-humantask/200803');
    var rendering_NS = new Namespace('http://wso2.org/ht/schema/renderings/');

    //Following variable were used to highlight current page which user is currently in.
    //these were set as 'active' at each corresponding task Model
    var myTasksNavActive = ''; //My Tasks veiw [updated at myTasksModel, refered at navigation.jag]
    var claimableTasksNavActive = ''; //Claimable Tasks view [updated at claimableTasksModel, refered at navigation.jag]
    var notificationsListNavActive = ''; // Notifications view [updated at notificationModel, refered at navigation.jag]
    var searchNavActive = ''; // Search view [updated at searchModel, refered at navigation.jag]
    var dashboardNavActive=''; //Dashboard view [updated at statsModel, refered at navigation.jag]




    //function to retrieve and update explorer webapp deployed server
    function getDeployedServerInfo () {

        var carbon = require('carbon');

        var serverConfigService = carbon.server.osgiService('org.wso2.carbon.base.api.ServerConfigurationService');
        var hostName = serverConfigService.getFirstProperty("HostName");

        var configContextService = carbon.server.osgiService('org.wso2.carbon.utils.ConfigurationContextService');
        var configContext = configContextService.getServerConfigContext();

        //retrieve https proxy port
        var CarbonUtils = Packages.org.wso2.carbon.utils.CarbonUtils;
        var httpsProxyPort = CarbonUtils.getTransportProxyPort(configContext, "https");
        
        var serverInfo = {"HostName" : hostName, "ProxyPort" : httpsProxyPort}

        return serverInfo;
    }
%>