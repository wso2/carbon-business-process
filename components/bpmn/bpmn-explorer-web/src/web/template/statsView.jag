<%/*<!--
 ~ Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ Licensed under the Apache License, Version 2.0 (the "License");
 ~ you may not use this file except in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~      http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing, software
 ~ distributed under the License is distributed on an "AS IS" BASIS,
 ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~ See the License for the specific language governing permissions and
 ~ limitations under the License.
 -->*/%>
<div class="col-sm-12">
  <div class="row">
    <% if(isProcessesDeployed == true) { %>
    <link rel="stylesheet" href="css/tooltip.css">
    <script src="js/pieChartGen.js"></script>
    <script src="js/corechartEn.js"></script>
    <link rel="stylesheet" href="css/chart.css">

    <script type="text/javascript">
          google.load("visualization", "1", {packages:["corechart"]});
          google.setOnLoadCallback(drawChart);

          var dataArrForProcess = [['Process Name', 'Instance Count']];
          var chart,chartData,options;
          //pagination stuff
          var pager = { currentPage: 0, countPages: 0, pageSize: 25 };
           <% for(var j = 0; j < processChart.length; j++){ %>

                dataArrForProcess.push(['<%=processChart[j][0]%>',<%=processChart[j][1]%>]);

              <% } %>

          function drawChart(){
            chartData = google.visualization.arrayToDataTable(dataArrForProcess);
            var max=0;
            var count=0;

            for(var i=0; i<dataArrForProcess.length;i++){
              if (dataArrForProcess[i][1] > max) {
                max = dataArrForProcess[i][1];
              }

             if(dataArrForProcess[i][1]>0){
                count++;
              }
            }


           if(max >= 100 && count > 1){
              var hTitle='Process instance count (log scale)';
              var logScaleEnabled = true;
            }

            else{
              var hTitle='Process instance count';
              var logScaleEnabled = false;
            }
           var dataSize = pager.pageSize;
           if (dataSize > chartData.getNumberOfRows()) {
              dataSize = chartData.getNumberOfRows();
           }
           var chartAreaHeight=((dataSize + 2) * 100);
           options = {
              vAxis: {title: '<%=i18n.localize("process.name","Process Name")%>',  titleTextStyle: { color: 'grey' },textStyle: { fontSize:11}},
              hAxis: {title: hTitle, titleTextStyle: {color: 'grey'}, logScale:logScaleEnabled, minValue: 0},
              colors:['#be2d28'],
              height: ((dataSize + 2) * 100) + 200,
              chartArea:{top:10,height:chartAreaHeight},
              bar: {groupWidth: "35%"}
           };

            chart = new google.visualization.BarChart(document.getElementById('barChart'));
            // setting number of pages and moving to first page
            pager.countPages = Math.ceil(chartData.getNumberOfRows() / pager.pageSize);
            paginate('next');
          }

          function paginate(direction) {
            // moving page number
            if (pager.currentPage == 1 && direction == 'prev') return;
            if (pager.currentPage == pager.countPages && direction == 'next') return;
            if (direction == 'next') pager.currentPage += 1;
            if (direction == 'prev') pager.currentPage -= 1;

            var cloneTable = chartData.clone();
            var numOfRows = cloneTable.getNumberOfRows();
            // validate existance of data for pager, and remove rows
            if (numOfRows > 0 && pager.currentPage <= pager.countPages) {
                // remove previous rows
                cloneTable.removeRows(0, (pager.currentPage - 1) * pager.pageSize);
                // remove next rows
                cloneTable.removeRows(pager.pageSize, cloneTable.getNumberOfRows() - pager.pageSize);
            }
            document.getElementById('pageCount').innerHTML = 'Page ' + pager.currentPage + ' of ' + pager.countPages;
            chart.draw(cloneTable, options);
          }
        </script>


      <div class="col-lg-8 float-left">
            <!-- Default panel contents -->
            <div class="table-title"  style="width:100%"> <%=i18n.localize("process.instance.count","Process Instance Count")%> <span class="chartPagination" onclick="paginate('next');">></span>
            <span class="page-label" id="pageCount"></span>
            <span class="chartPagination" onclick="paginate('prev');"><</span>&nbsp;</div>
            <div id="barChart"></div>
      </div>

    <script type="text/javascript">
      google.setOnLoadCallback(drawChart);
      var dataArr = [['Process State', 'Instance count']];
       
           <% for(var j = 0; j < processStatusChart.length; j++){ %>
                dataArr.push(['<%=processStatusChart[j][0]%>',<%=processStatusChart[j][1]%>]);
              <%  } %>

      function drawChart() {
         var data = google.visualization.arrayToDataTable(dataArr);
   

        var options = {
          pieHole: 0.6,
          pieSliceTextStyle: {
            color: 'white'
          },
          colors:['#be2d28','#dddddd','#afaeae','#333'],
          sliceVisibilityThreshold: 0
        };

        var chart = new google.visualization.PieChart(document.getElementById('processInstanceChart'));
        chart.draw(data, options);
      }
    </script>

      <div class="col-lg-4 float-left">
          <div class="row" name="TaskInstancesChart">
          <!-- Default panel contents -->
              <div class="table-title"  style="width:100%"> <%=i18n.localize("process.instance.status","Process Instance Status")%> </div>
              <div id="processInstanceChart" style="height:33%"></div>
          </div>
          <br>

    <script type="text/javascript">
      google.setOnLoadCallback(drawChart);
       var dataArrTasks = [['Task State', 'Instance count']];
       
           <% for(var j = 0; j < taskStatusChart.length; j++){ %>
                dataArrTasks.push(['<%=taskStatusChart[j][0]%>',<%=taskStatusChart[j][1]%>]);
              <%  } %>

      function drawChart() {
       var data = google.visualization.arrayToDataTable(dataArrTasks);
      


        var options = {
          pieHole: 0.6,
          pieSliceTextStyle: {
            color: 'white'
          },
          colors:['#be2d28','#dddddd','#afaeae','#333'],
          sliceVisibilityThreshold: 0
        };

        var chart = new google.visualization.PieChart(document.getElementById('taskInstancesChart'));
        chart.draw(data, options);
      }
    </script>

          <div class="row" name="TaskInstancesChart">
              <div class="table-title" style="width:100%"><%=i18n.localize("task.instance.status","Task Instance Status")%> </div>
              <div id="taskInstancesChart" style="height:33% " ></div>
          </div>
    <% }else{ %>
      <br/>
      &nbsp;&nbsp;<%=i18n.localize("welcome.msg","Welcome to BPMN Explorer statistical view. Please deploy processes from admin view and create tasks to generate statistics.")%>
      <br/><br/>
    <% }%>
  </div>
  </div>