<!--
 ~ Copyright (c) WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ Licensed under the Apache License, Version 2.0 (the "License");
 ~ you may not use this file except in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~      http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing, software
 ~ distributed under the License is distributed on an "AS IS" BASIS,
 ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~ See the License for the specific language governing permissions and
 ~ limitations under the License.
-->
<%
var id = request.getParameter("id");
var headers = {"Authorization":"Basic " + auth,
"Content-Type" : "application/json"
};
var user = session.get("user");

try {
    
    var task = get( httpUrl + "/bpmn/runtime/tasks/" + id ,null, headers, "json" ).data;


    if (log.isDebugEnabled()) {
        log.debug("BPS BPMN REST request:"+ httpUrl + "/bpmn/runtime/tasks/" + id);
        log.debug("BPS BPMN REST API response: " +stringify(task));
    }

    //Check for error response
    if (task.errorMessage != undefined) {
        throw "Error " + task.statusCode + " : " + task.errorMessage;
    }

    var taskDesc = task.description;
    if(taskDesc == null) { taskDesc = "Description not available"; }
    var taskOwner = task.owner;
    if(taskOwner == null) { taskOwner = "Not available"; }
    var taskName = task.name;
    if(taskName == null) { taskName = "Not available"; }
    var taskData = {
        name:taskName,
        desc:taskDesc,
        pid:task.processDefinitionId,
        owner:taskOwner,
        assignee:task.assignee,
        subtask:task.subtaskList
    };

    var formGenTool = require("/assets/dynamicFormGen.js");

    var formData = get( httpUrl + "/bpmn/form/form-data/?taskId=" + id, null, headers, "json" ).data.formProperties;

    if (log.isDebugEnabled()) {
        log.debug("BPS BPMN REST request:"+ httpUrl + "/bpmn/form/form-data?taskId=" + id);
        log.debug("BPS BPMN REST API response: " +stringify(formData));
    }

    //Check for error response
    if (formData.errorMessage != undefined) {
        throw "Error " + formData.statusCode + " : " + formData.errorMessage;
    }

    var formContent = formGenTool.generateForm(formData, true);

} catch (e) {
    if (log.isDebugEnabled()) {
        log.debug("User Error Occured : " + e);
    }
    //Enable and display error in common error display area in view
    commonErrorMessage = getCommonErrorContent(e);
    errorDisplayEnable = '';
}
%>